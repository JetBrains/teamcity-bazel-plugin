<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2000-2023 JetBrains s.r.o.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"
       default-autowire="constructor">
  <bean class="jetbrains.buildServer.bazel.BazelArgumentsSplitterImpl"/>
  <bean class="jetbrains.buildServer.bazel.BazelBuildSessionFactory"/>
  <bean class="jetbrains.buildServer.bazel.BazelCommandBuildSession" scope="prototype"/>
  <bean class="jetbrains.buildServer.bazel.BazelCacheCleaner"/>
  <bean class="jetbrains.buildServer.bazel.BazelToolProvider"/>
  <bean class="jetbrains.buildServer.bazel.BazelRunnerBuildService" scope="prototype"/>
  <bean class="jetbrains.buildServer.bazel.CommandExecutionAdapter" scope="prototype"/>

  <!--agent service-->
  <bean class="jetbrains.buildServer.agent.EnvironmentImpl"/>
  <bean class="jetbrains.buildServer.agent.JacksonJsonSerializer"/>
  <bean class="jetbrains.buildServer.agent.CommandLineExecutorImpl"/>
  <bean class="jetbrains.buildServer.agent.AgentLifeCycleEventSourcesImpl"/>
  <bean class="jetbrains.buildServer.agent.FileSystemServiceImpl"/>

  <!--runner service-->
  <bean class="jetbrains.buildServer.agent.runner.BuildStepContextImpl"/>
  <bean class="jetbrains.buildServer.agent.runner.ParametersServiceImpl"/>
  <bean class="jetbrains.buildServer.agent.runner.PathsServiceImpl"/>

  <!--bazel services-->
  <bean class="jetbrains.buildServer.bazel.RunnerInitializer"/>
  <bean class="jetbrains.buildServer.bazel.WorkspaceRegistryImpl"/>
  <bean class="jetbrains.buildServer.bazel.BesCommandLineBuilder" id="besCommandLineBuilder"/>
  <bean class="jetbrains.buildServer.bazel.BazelCommandLineBuilder" id="bazelCommandLineBuilder"/>
  <bean class="jetbrains.buildServer.bazel.WorkspaceExplorerImpl">
    <constructor-arg ref="infoWorkspaceCommand"/>
    <constructor-arg ref="fullCleanCommand"/>
  </bean>
  <bean class="jetbrains.buildServer.bazel.ShutdownMonitor">
    <constructor-arg ref="shutdownCommand"/>
  </bean>
  <bean class="jetbrains.buildServer.bazel.WorkingDirectoryProviderImpl"/>
  <bean class="jetbrains.buildServer.bazel.ArgumentsConverterImpl"/>
  <bean class="jetbrains.buildServer.bazel.BazelCommandFactory">
    <constructor-arg ref="bazelCommandLineBuilder"/>
    <constructor-arg ref="commonArgumentsProvider"/>
  </bean>

  <!--bazel arguments providers-->
  <bean class="jetbrains.buildServer.bazel.commands.StartupArgumentsProvider" id="startupArgumentsProvider"/>
  <bean class="jetbrains.buildServer.bazel.commands.CommonArgumentsProvider" id="commonArgumentsProvider">
    <constructor-arg ref="startupArgumentsProvider"/>
  </bean>
  <bean class="jetbrains.buildServer.bazel.commands.TargetsArgumentsProvider" id="targetsArgumentsProvider"/>
  <bean class="jetbrains.buildServer.bazel.commands.BuildArgumentsProvider" id="buildArgumentsProvider">
    <constructor-arg ref="commonArgumentsProvider"/>
    <constructor-arg ref="targetsArgumentsProvider"/>
  </bean>

  <!--bazel commands-->
  <bean class="jetbrains.buildServer.bazel.commands.BuildCommand">
    <constructor-arg ref="besCommandLineBuilder"/>
    <constructor-arg ref="buildArgumentsProvider"/>
  </bean>
  <bean class="jetbrains.buildServer.bazel.commands.CleanCommand" id="cleanCommand">
    <constructor-arg ref="bazelCommandLineBuilder"/>
    <constructor-arg ref="commonArgumentsProvider"/>
  </bean>
  <bean class="jetbrains.buildServer.bazel.commands.RunCommand">
    <constructor-arg ref="besCommandLineBuilder"/>
    <constructor-arg ref="commonArgumentsProvider"/>
    <constructor-arg ref="targetsArgumentsProvider"/>
  </bean>
  <bean class="jetbrains.buildServer.bazel.commands.TestCommand">
    <constructor-arg ref="besCommandLineBuilder"/>
    <constructor-arg ref="buildArgumentsProvider"/>
  </bean>
  <bean class="jetbrains.buildServer.bazel.commands.ShutdownCommand" id="shutdownCommand">
    <constructor-arg ref="bazelCommandLineBuilder"/>
    <constructor-arg ref="startupArgumentsProvider"/>
  </bean>
  <bean class="jetbrains.buildServer.bazel.commands.InfoWorkspaceCommand" id="infoWorkspaceCommand">
    <constructor-arg ref="bazelCommandLineBuilder"/>
    <constructor-arg ref="startupArgumentsProvider"/>
  </bean>
  <bean class="jetbrains.buildServer.bazel.commands.FullCleanCommand" id="fullCleanCommand">
    <constructor-arg ref="bazelCommandLineBuilder"/>
    <constructor-arg ref="startupArgumentsProvider"/>
  </bean>

</beans>