plugins {
  alias libs.plugins.teamcity.agent
}

teamcity {
  version = libs.versions.teamcity.get()
  agent {
    archiveName = "teamcity-bazel-agent"
    descriptor {
      pluginDeployment {
        useSeparateClassloader = true
      }
    }
    files {
      into('tools') {
        from('./../plugin-bazel-event-service/build/libs')
        from('./../plugin-bazel-event-service/build/tools')
      }
    }
  }
}

dependencies {
  implementation libs.kotlin.stdlib
  implementation libs.kotlin.reflect
  implementation libs.java.semver
  implementation libs.jackson.module.kotlin
  compileOnly libs.teamcity.common.api
  compileOnly libs.teamcity.internal.agent
  testImplementation libs.teamcity.common.api
  testImplementation libs.teamcity.internal.agent
  testImplementation libs.testng
  testImplementation libs.mockk

  implementation project(':plugin-bazel-common')
  testImplementation project(':plugin-bazel-event-service')

  constraints {
    implementation(libs.constraint.transitive.icu4j) {
      because 'previous versions have faulty jar files which cause problems during incremental compilation (which is enabled by default since Kotlin 1.8.20)'
    }
  }
}

agentPlugin.dependsOn(project(':plugin-bazel-event-service').tasks.assemble)