

plugins {
  id 'com.github.rodm.teamcity-agent' version '1.4.1'
}

teamcity {
  version = teamcityVersion
  agent {
    descriptor = project.file('teamcity-plugin.xml')
    files {
      into('tools') {
        from('./../plugin-bazel-event-service/build/libs')
        from('./../plugin-bazel-event-service/build/tools')
      }
    }
  }
}

dependencies {
  implementation project(':plugin-bazel-common')
  implementation project(':rx')
  implementation "org.jetbrains.kotlin:kotlin-stdlib"
  implementation "org.jetbrains.kotlin:kotlin-reflect"
  implementation "com.github.zafarkhaja:java-semver:0.9.0"
  implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.10.0"
  compileOnly "org.jetbrains.teamcity.internal:agent:${teamcityVersion}"
  compileOnly "org.jetbrains.teamcity:common-api:${teamcityVersion}"
  testImplementation "org.jetbrains.teamcity.internal:agent:${teamcityVersion}"
  testImplementation "org.jetbrains.teamcity:common-api:${teamcityVersion}"
  testImplementation project(':plugin-bazel-event-service')
  testImplementation 'org.testng:testng:6.8'
  testImplementation 'org.jmock:jmock:2.5.1'
  testImplementation 'io.mockk:mockk:1.11.0'
}

agentPlugin.version = null
agentPlugin.baseName = 'teamcity-bazel-agent'

agentPlugin.dependsOn(project(':plugin-bazel-event-service').tasks.build)